name: Build, Test and Deploy getBible Librarian

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        # 3.7 is EOL and often fails on ubuntu-latest. Test on supported versions.
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            requirements-test.txt

      - name: Upgrade build tooling
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install the package (editable)
        run: pip install -e .

      - name: Run unittests
        run: python -m unittest discover -s tests -v

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    # Only deploy on direct pushes to master (not PRs)
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip

      - name: Upgrade build tooling
        run: python -m pip install --upgrade pip setuptools wheel build twine

      - name: Build Package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

